name: Test Python Package with Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Create virtual environment
      run: python -m venv venv
    
    - name: Set environment variables (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "VIRTUAL_ENV=${{ github.workspace }}\venv" >> $GITHUB_ENV
        echo "${{ github.workspace }}\venv\Scripts" >> $GITHUB_PATH
    
    - name: Set environment variables (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "VIRTUAL_ENV=${{ github.workspace }}/venv" >> $GITHUB_ENV
        echo "${{ github.workspace }}/venv/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install maturin pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build and install with Maturin
      run: |
        cd python_bindings/
        maturin develop --release
    - name: Test with pytest
      run: |
        pytest